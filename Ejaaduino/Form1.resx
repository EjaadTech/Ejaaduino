<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>59</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>